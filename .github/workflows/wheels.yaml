name: Build Wheels

on:
  push:
  # pull_request:
  workflow_dispatch:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
#   cancel-in-progress: true

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clone AutoTrace
        uses: actions/checkout@v3
        with:
          repository: autotrace/autotrace
          path: ./third-party/autotrace
          ref: fcd9043f6227979ea2b21ac5d9f796325bdb1343

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Build sdist
        run: python setup.py sdist

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest, macos-latest]
    env:
      CIBW_SKIP: pp*
      CIBW_ARCHS: auto64
      CIBW_ARCHS_MACOS: x86_64 arm64 universal2
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clone AutoTrace
        uses: actions/checkout@v3
        with:
          repository: autotrace/autotrace
          path: ./third-party/autotrace
          ref: fcd9043f6227979ea2b21ac5d9f796325bdb1343

      - name: Extract GLib headers
        if: matrix.os == 'windows-latest'
        run: Expand-Archive "./third-party/autotrace/distribute/win/3rdparty/glib-dev_2.34.3-1_win64.zip" -DestinationPath "./third-party/autotrace/distribute/win/3rdparty/glib"

      - name: Debug
        run: |
          pkg-config --cflags glib
          pkg-config --cflags glib-2.0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  # publish_release:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  # TODO

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'release' && github.event.action == 'published'
  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheels
  #         path: ./dist

  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@v1
  #       with:
  #         skip_existing: true
  #         password: ${{ secrets.PYPI_PASSWORD }}
