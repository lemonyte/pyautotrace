name: Build Wheels

on:
  push:
    paths:
      - ".github/workflows/**"
      - "autotrace/**"
      - "**.py"
      - "**.toml"
      - "**.in"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clone AutoTrace
        uses: actions/checkout@v3
        with:
          repository: autotrace/autotrace
          path: ./third-party/autotrace
          ref: fcd9043f6227979ea2b21ac5d9f796325bdb1343

      - name: Extract GLib headers
        shell: bash
        run: >
          unzip ./third-party/autotrace/distribute/win/3rdparty/glib-dev_2.34.3-1_win64.zip
          -d ./third-party/autotrace/distribute/win/3rdparty/glib

      - name: Build sdist
        run: pipx run build --sdist

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clone AutoTrace
        uses: actions/checkout@v3
        with:
          repository: autotrace/autotrace
          path: ./third-party/autotrace
          ref: fcd9043f6227979ea2b21ac5d9f796325bdb1343

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_SKIP: pp*
          CIBW_ARCHS: auto64
          CIBW_ARCHS_MACOS: universal2

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  # publish_release:
  #   needs:
  #     - build_sdist
  #     - build_wheels
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && github.actor == 'lemonyte'
  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: ./dist

  #     - name: Create release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: ./dist/*

  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         password: ${{ secrets.PYPI_API_TOKEN }}
