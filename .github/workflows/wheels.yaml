name: Build Wheels

on:
  push:
  # pull_request:
  workflow_dispatch:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
#   cancel-in-progress: true

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clone AutoTrace
        uses: actions/checkout@v3
        with:
          repository: autotrace/autotrace
          path: ./third-party/autotrace
          ref: fcd9043f6227979ea2b21ac5d9f796325bdb1343

      - name: Build sdist
        run: python setup.py sdist

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheel for Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clone AutoTrace
        uses: actions/checkout@v3
        with:
          repository: autotrace/autotrace
          path: ./third-party/autotrace
          ref: fcd9043f6227979ea2b21ac5d9f796325bdb1343

      - name: Extract GLib headers
        if: matrix.os == windows-latest
        run: Expand-Archive "./third-party/autotrace/distribute/win/3rdparty/glib-dev_2.34.3-1_win64.zip" -DestinationPath "./third-party/autotrace/distribute/win/3rdparty/glib"

      - name: Install GLib
        if: matrix.os == macos-latest
        run: brew install glib

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Build package
        run: python setup.py bdist_wheel

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./dist/*.whl

  # publish_release:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  # TODO

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == release && github.event.action == published
  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheels
  #         path: ./dist

  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@v1
  #       with:
  #         skip_existing: true
  #         password: ${{ secrets.PYPI_PASSWORD }}
